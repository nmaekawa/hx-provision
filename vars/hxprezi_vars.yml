---

# HXPREZI VARS
# ----------------------------------------------------------------------------------

# service vars
service_name: "hxprezi"
service_user: "{{ service_name }}"
service_group: "{{ service_name }}"

service_rootdir: "/opt/{{ service_name }}"
service_venv_dir: "{{ service_rootdir }}/venv"
service_log_dir: "{{ service_rootdir }}/log"
service_log_path: "{{ service_log_dir }}/{{ service_name }}.log"
# uncomment, otherwise default is debug: # 'DEBUG'|'INFO'|'WARNING'|'ERROR'|'CRITICAL'
# service_log_level: "DEBUG"

service_install_dir: "{{ service_rootdir }}/{{ service_name }}"
service_static_dir: "{{ service_rootdir }}/www"
service_config_dir: "{{ service_rootdir }}/conf"
service_bin_dir: "{{ service_rootdir }}/bin"
service_data_dir: "{{ service_rootdir }}/data"
service_cache_dir: "{{ service_data_dir }}/cache"

# specific to hxprezi
service_source_dir: "{{ service_data_dir }}/hx"
service_db_dir: "{{ service_data_dir }}/db"

service_gunicorn_port: "{{ lookup('env', 'HXPREZI_GUNICORN_PORT') | default('8234', true) }}"
service_gunicorn_host: "{{ lookup('env', 'HXPREZI_GUNICORN_HOST') | default('0.0.0.0', true) }}"
gunicorn_timeout_seconds: 60  # workers timeout for nginx cfg

service_git_repo: "https://github.com/nmaekawa/hxprezi.git"
var_service_git_revision: "{{ service_name | upper }}_GIT_REVISION"
service_git_revision: "{{ lookup('env', var_service_git_revision) | default('master', true) }}"

# easier to create dirs with this dict
service_dirs_to_create:
    - "{{ service_rootdir }}"
    - "{{ service_log_dir }}"
    - "{{ service_config_dir }}"
    - "{{ service_data_dir }}"
    - "{{ service_source_dir }}"
    - "{{ service_cache_dir }}"
    - "{{ service_db_dir }}"
    - "{{ service_bin_dir }}"
    - "{{ service_static_dir }}"

# specific to webapp_install role
service_dotenv_path: "{{ service_config_dir }}/{{ service_name }}.env"
service_admin_user: "{{ lookup('env', 'HXPREZI_ADMIN_USER') | default('user', true) }}"
service_admin_email: "{{ lookup('env', 'HXPREZI_ADMIN_EMAIL') | default('user@user.com', true) }}"
service_admin_password: "{{ lookup('env', 'HXPREZI_ADMIN_PASSWORD') | default('password', true) }}"
service_environment:
  HXPREZI_SECRET: "{{ lookup('env', 'HXPREZI_SECRET') | default('nao pode mais meu coracao viver assim', true) }}"
  HXPREZI_DB_PATH: "{{ service_db_dir }}/{{ service_name }}.db"
  HXPREZI_LOCAL_MANIFESTS_SOURCE_DIR: "{{ service_source_dir }}"
  HXPREZI_LOCAL_MANIFESTS_CACHE_DIR: "{{ service_cache_dir }}"

# hostnames to be replaced in manifests references (used in dotenv files)
service_dns_subdomain: '{{ ec2_tag_cluster is search("prod") | ternary("", ec2_tag_cluster) }}'
service_images_dns_domain: '{{ ec2_tag_cluster is search("prod") | ternary("images", ".images") }}'
service_manifests_dns_domain: '{{ ec2_tag_cluster is search("prod") | ternary("oculus", ".oculus") }}'
service_environment_hostnames:
  HXPREZI_IMAGES_HOSTNAME: '{{ service_dns_subdomain }}{{ service_images_dns_domain }}.{{ org_dns_domain }}'
  HXPREZI_MANIFESTS_HOSTNAME: '{{ service_dns_subdomain }}{{ service_manifests_dns_domain }}.{{ org_dns_domain }}'

# hxprezi doesn't need flask users yet
service_flask_users: []

# define a list of dict with users like below but do NOT commit!
#    - username: "user"
#      password: "password"
#      email: "user@hx.edu"


# for Stouts.users
users_enabled: yes
users_to_install:
    - 'nmaekawa'
    - 'lduarte'
    - '{{ service_user }}'

# for nmaekawa.apt
apt_required_packages_hxprezi:
    - 'python-pip'
    - 'python-dev'
    - 'python-setuptools'
    - 'nginx'
    - 'supervisor'
    - 'sqlite3'
    - 'nginx'


# PROXY VARS
# ----------------------------------------------------------------------------------

enable_ssl: '{{ ec2_tag_cluster != "vagrant" }}'

# att: service_static_dir and the actual static_dir for nginx config might be
# different if proxy is to be in separate instance than the service(loris)
# - you can change this in the playbook, in **vars for include_role**
static_dir: '{{ service_static_dir }}'
nginx_ssl_dest_dir: '/etc/ssl/certs'
var_service_local_certs_dir: "{{ service_name | upper }}_LOCAL_CERTS_DIR"
local_certs_dir: "{{ lookup('env', var_service_local_certs_dir) | default('/Volumes/hximg_certs', true) }}"
cert_dns: 'oculus'  # this name must match pattern for ssl cert names




