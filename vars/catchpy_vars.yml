---

# CATCHPY VARS
# ----------------------------------------------------------------------------------

# service vars
service_name: "catchpy"
service_user: "{{ service_name }}"
service_group: "{{ service_name }}"

# dbserver config from environment
service_db_name: "{{ lookup('env', 'CATCHPY_DB_NAME') | default(service_name , true) }}"
service_db_user: "{{ lookup('env', 'CATCHPY_DB_USER') | default(service_name, true) }}"
service_db_password: "{{ lookup('env', 'CATCHPY_DB_PASSWORD') | default(service_name, true) }}"
# hardcoded vagrant catchpy postgres inventory hostname...
service_db_host: "{{ lookup('env', 'CATCHPY_DB_HOST') | default('dbserver.vm', true) }}"
service_db_port: "{{ lookup('env', 'CATCHPY_DB_PORT') | default('5432', true) }}"

# check in cloudformation for the device name
ebs_device: /dev/xvdf
ebs_mountpoint: /opt/hx

rootdir: "{{ ebs_mountpoint }}"
service_rootdir: "{{ rootdir }}/{{ service_name }}"
service_venv_dir: "{{ service_rootdir }}/venv"
# uncomment, otherwise default is debug: # 'DEBUG'|'INFO'|'WARNING'|'ERROR'|'CRITICAL'
# service_log_level: "DEBUG"

service_install_dir: "{{ service_rootdir }}/{{ service_name }}"
service_static_dir: "{{ service_rootdir }}/www"
service_django_static_dir: "{{ service_static_dir }}/static"
service_config_dir: "{{ service_rootdir }}/conf"
service_bin_dir: "{{ service_rootdir }}/bin"
service_data_dir: "{{ service_rootdir }}/data"

service_gunicorn_port: "{{ lookup('env', 'CATCHPY_GUNICORN_PORT') | default('8236', true) }}"
service_gunicorn_host: "{{ lookup('env', 'CATCHPY_GUNICORN_HOST') | default('127.0.0.1', true) }}"
gunicorn_timeout_seconds: 60  # workers timeout for nginx cfg

service_git_repo: "https://github.com/nmaekawa/{{ service_name }}.git"
var_service_git_revision: "{{ service_name | upper }}_GIT_REVISION"
service_git_revision: "{{ lookup('env', var_service_git_revision) | default('master', true) }}"

# easier to create dirs with this dict
service_dirs_to_create:
    - "{{ service_rootdir }}"
    - "{{ service_config_dir }}"
    - "{{ service_data_dir }}"
    - "{{ service_bin_dir }}"
    - "{{ service_static_dir }}"
    - "{{ service_django_static_dir }}"

# specific to webapp_install role
service_dotenv_path: "{{ service_config_dir }}/{{ service_name }}.env"
# django admin user to be created
service_admin_user: "{{ lookup('env', 'CATCHPY_ADMIN_USER') | default('user', true) }}"
service_admin_email: "{{ lookup('env', 'CATCHPY_ADMIN_EMAIL') | default('user@user.com', true) }}"
service_admin_password: "{{ lookup('env', 'CATCHPY_ADMIN_PASSWORD') | default('password', true) }}"
service_default_django_settings: '{{ service_name }}.settings.dev'
# env vars defined in service_dotenv_path file
service_environment:
  DJANGO_SETTINGS_MODULE: "{{ lookup('env', 'CATCHPY_DJANGO_SETTINGS') | default(service_default_django_settings, true) }}"
  CATCHPY_DJANGO_SECRET_KEY: "{{ lookup('env', 'CATCHPY_DJANGO_SECRET_KEY') | default('nao pode mais meu coracao viver assim', true) }}"
  CATCHPY_STATIC_ROOT: "{{ service_django_static_dir }}"
  CATCHPY_DB_NAME: "{{ service_db_name }}"
  CATCHPY_DB_USER: "{{ service_db_user }}"
  CATCHPY_DB_PASSWORD: "{{ service_db_password }}"
  CATCHPY_DB_HOST: "{{ service_db_host }}"
  CATCHPY_DB_PORT: "{{ service_db_port }}"
  CATCH_LOG_REQUEST_TIME: "true"
  CATCH_LOG_SEARCH_TIME: "true"
  CATCH_LOG_JWT: "true"
  CATCH_LOG_JWT_ERROR: "true"


# for Stouts.users
users_enabled: yes
users_to_install:
    - 'nmaekawa'
    - 'lduarte'
    - '{{ service_user }}'

# for nmaekawa.apt
apt_required_packages_catchpy:
    - 'python3-pip'
    - 'python3-dev'
    - 'python3-setuptools'
    - 'libpq-dev'
    - 'nginx'
    - 'supervisor'
    - 'postgresql-client'


# PROXY VARS
# ----------------------------------------------------------------------------------

enable_ssl: '{{ ec2_tag_cluster != "vagrant" }}'
static_dir: '{{ service_static_dir }}'
nginx_ssl_dest_dir: '/etc/ssl/certs'
cert_dns: 'catchpy'  # this name must match pattern for ssl cert names
# special case for vagrant
vagrant_webserver_dns: '{{ inventory_hostname }}'




