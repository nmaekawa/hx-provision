---

#
# apply to prod nginx instances to backup access.log/error.log in s3
#

- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
    project_name: '{{ hostvars[inventory_hostname].ec2_tag_project | mandatory}}'
    service_role: '{{ hostvars[inventory_hostname].ec2_tag_service | mandatory}}'
    cluster_env: '{{ (hostvars[inventory_hostname].ec2_tag_cluster == "prod")| ternary("prod", "devo") }}'
    cloudwatch_namespace: '{{ cloudwatch_namespace_prefix }}/{{ project_name }}'
  vars_files:
    - vars/common_vars.yml
    - roles/external/nmaekawa.cloudwatch/defaults/main.yml  # TODO: define needed vars in import_tasks

  tasks:
    - ec2_metadata_facts:

    - debug:
        msg: "project_name={{ project_name }}; service_role={{ service_role }}; cluster_env={{ cluster_env }}; namespace={{ cloudwatch_namespace }}; instance_id={{ ansible_ec2_instance_id}}"

    - import_tasks: roles/external/nmaekawa.cloudwatch/tasks/install_backup_cronjob.yml
      vars:
        cronjob_owner: root
        s3_backup_prefix: '{{ cluster_env }}/{{ project_name }}'
        file_backup_prefix: '{{ service_role }}_{{ ansible_ec2_instance_id }}'
        files_to_backup:
          - /var/log/nginx/access.log.1
          - /var/log/nginx/error.log.1

