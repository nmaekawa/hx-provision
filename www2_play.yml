---
- import_playbook: common_play.yml

- hosts: '{{ target_hosts | default("tag_service_www2", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  vars:
    local_www2_path_tar_gz: /Volumes/Projects/Dev_Team/backups/www2_vagrant_sample.tar.gz
  vars_files:
      - vars/common_vars.yml
      - vars/www2_vars.yml
  handlers:
    - include_tasks: handlers/main.yml

  tasks:
    - name: config nginx
      include_role:
        name: nginx

    - name: run initial s3 sync for www2 certs, pull from s3 bak
      shell: >
          /usr/bin/aws s3 sync
          "s3://{{ s3_sync_bucket_name }}/{{ ec2_tag_cluster }}/{{ s3_sync_prefix }}"
          "{{ source_s3_sync_dir }}/"
          2>&1 | logger -t "[s3 sync INITIAL]"
      vars:
        s3_sync_bucket_name: '{{ s3_backup_bucket_name }}'
        s3_sync_prefix: 'www2'
        source_s3_sync_dir: '{{ static_dir }}'
      when: ec2_tag_cluster == 'prod'

    - name: chown '{{ static_dir_root }}'
      file:
        path: '{{ static_dir_root }}'
        state: directory
        recurse: yes
        owner: www-data
        group: www-data

    - name: set cronjob for s3 sync bak(static_dir->s3)
      cron:
        name: "s3 sync for {{ source_s3_sync_dir }}"
        user: "{{ cronjob_owner | mandatory}}"
        special_time: daily
        state: present
        job: >
            /usr/bin/aws s3 sync
            "{{ source_s3_sync_dir }}"
            "s3://{{ s3_sync_bucket_name }}/{{ ec2_tag_cluster}}/{{ s3_sync_prefix }}"
            2>&1 | logger -t "[s3 sync]"
      vars:
        s3_sync_bucket_name: '{{ s3_backup_bucket_name }}'
        s3_sync_prefix: 'www2'
        source_s3_sync_dir: '{{ static_dir }}'
      when: use_aws and ec2_tag_cluster == 'prod'

    - name: unarchive local www2 backup tar.gz
      unarchive:
        src: '{{ local_www2_path_tar_gz }}'
        dest: '{{ static_dir }}'
        owner: 'www-data'
        group: 'www-data'
      when: ec2_tag_cluster != 'prod' and ( local_www2_path_tar_gz is defined )

- import_playbook: backup_play.yml

