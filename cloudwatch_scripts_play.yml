---

#
# apply to aws prod, for syslog backup, disk metrics, and extra metrics on memory
#

- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
      project_name: '{{ hostvars[inventory_hostname].ec2_tag_project | mandatory}}'
      cluster_env: '{{ (hostvars[inventory_hostname].ec2_tag_cluster == "prod")| ternary("prod", "devo") }}'
      service_role: '{{ hostvars[inventory_hostname].ec2_tag_service | mandatory}}'
      cloudwatch_namespace: '{{ cloudwatch_namespace_prefix }}/{{ project_name }}'
      service_cw_install_dir: '/opt/aws-scripts-mon/'

  vars_files:
      - vars/common_vars.yml

  tasks:

      # install cw scripts, cronjobs for disk metrics and syslog->s3
      - import_role:
          name: external/nmaekawa.cloudwatch
        vars:
          # s3_backup_bucket_name: ''  # defined in vars/common_vars.yml
          s3_backup_prefix: '{{ cluster_env }}/{{ project_name }}'
          file_backup_prefix: '{{ service_role }}_{{ ansible_ec2_instance_id }}'
        when: ec2_tag_cluster == 'prod'

      #- import_role:
      #    name: external/weihrauch.cloudwatch-monitoring
      #  vars:
      #      cw_install_dir: '{{ service_cw_install_dir }}'
      #      cw_options: "--mem-util --mem-used --mem-avail"
      #      cw_cron_minute: "*/2"
      #  when: ec2_tag_cluster == 'prod'
      #
      #- name: change metric namespace
      #  replace:
      #      path: '{{ service_cw_install_dir }}/mon-put-instance-data.pl'
      #      regexp: "(.*input_ref->{'Namespace'} =).*"
      #      replace: '\1 "{{ cloudwatch_namespace }}";'
      #      backup: yes
      #  when: ec2_tag_cluster == 'prod'

