---
    - name: db upgrade | flask upgrade
      become_user: "{{ service_user }}"
      shell: >
          export {{ service_name | upper}}_DOTENV_PATH={{ service_dotenv_path }} &&
          export FLASK_APP={{ service_name }}/wsgi.py &&
          . {{ service_venv_dir }}/bin/activate &&
          flask db upgrade
      args:
          chdir: "{{ service_install_dir }}"


    - name: admin user | create admin user
      become_user: "{{ service_user }}"
      shell: >
          (export {{ service_name | upper}}_DOTENV_PATH={{ service_dotenv_path }};
          export FLASK_APP={{ service_install_dir }}/{{ service_name }}/wsgi.py;
          . {{ service_venv_dir }}/bin/activate;
          flask create-user
          --usr '{{ service_admin_user }}'
          --pwd '{{ service_admin_password }}'
          --email '{{ service_admin_email }}'
          --is_admin)
      args:
          chdir: "{{ service_install_dir }}"
      register: create_user
      ignore_errors: True

    - fail:
        msg: "error creating admin user for service {{ service_name }}: {{ create_user.stdout }}"
      when:
          "create_user.rc != 0 and 'already exists' not in create_user.stdout"


    - name: other user | create other users
      become_user: "{{ service_user }}"
      shell: >
          export {{ service_name | upper}}_DOTENV_PATH={{ service_dotenv_path }} &&
          export FLASK_APP={{ service_name }}/wsgi.py &&
          . {{ service_venv_dir }}/bin/activate &&
          flask create-user
          --usr '{{ item.username }}'
          --pwd '{{ item.password }}'
          --email '{{ item.email }}'
      args:
          chdir: "{{ service_install_dir }}"
      ignore_errors: True
      with_items: "{{ service_flask_users }}"


