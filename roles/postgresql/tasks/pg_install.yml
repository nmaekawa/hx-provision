---

    - name: postgres | import postgres signing key
      apt_key:
        url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
        state: present

    - name: postgres | add source for postgres to apt repository
      apt_repository:
          repo: 'deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main'
          update_cache: yes
          state: present

    - name: postgres | update pkg list
      apt:
        update_cache: yes
        upgrade: dist

    - name: postgres | install postgres
      apt:
        name:
          - postgresql-{{ postgres_version }}
          - postgresql-contrib-{{ postgres_version }}
          - python-psycopg2
        state: present

    - name: install | ensure data and backup dir exists
      file:
        path: "{{ db_rootdir }}/{{ item }}"
        owner: postgres
        group: postgres
        mode: 0755
        state: directory
      with_items:
        - backup
        - data
        - bin
        - log

    - name: postgres | ensure service is NOT running but enabled
      service:
        name: postgresql
        state: stopped
        enabled: yes

    # move postgres data directory
    # https://www.digitalocean.com/community/tutorials/how-to-move-a-postgresql-data-directory-to-a-new-location-on-ubuntu-16-04
    - name: check | check if already moved dir
      stat:
        path: /var/lib/postgresql/{{ postgres_version }}/main.bak
      register: result

    - name: data dir | ensure data dir existis
      file:
        path: "{{ db_data_dir }}"
        owner: postgres
        group: postgres
        mode: 0700
        state: directory

    - name: rsync | copy data from default location to new data_dir
      synchronize:
        src: "/var/lib/postgresql/{{ postgres_version }}/main/"
        dest: "{{ db_data_dir }}"
      delegate_to: "{{ inventory_hostname }}"
      when: result.stat.exists == False

    - name: bak | rename old data_dir
      command: >
        mv /var/lib/postgresql/{{ postgres_version }}/main
            /var/lib/postgresql/{{ postgres_version }}/main.bak
      when: result.stat.exists == False

      # do this in config.yml
      #- name: data dir | set data dir
      #replace:
      #  path: /etc/postgresql/{{ postgres_version }}/main/postgresql.conf
      #  regexp: ".*data_directory.*"
      #  replace: "data_directory = '{{ db_data_dir }}'"
      #when: result.stat.exists == False

      #- name: data dir | ensure postgres is up
      #service:
      #  name: postgresql
      #  state: started



