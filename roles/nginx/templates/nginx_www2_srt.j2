
{% if (with_ssl) %}
server {
    listen  {{ nginx_non_ssl_port_srt | default(80, true) }};
    {% if webserver_dns is defined and webserver_dns != '' %}
    server_name  {{ webserver_dns }};
    {% endif %}
    return  301  https://$host:{{ nginx_non_ssl_port_srt | default(443, true) }}$request_uri;
}
{% endif %}


server {
{% if (with_ssl) %}
    listen              {{ nginx_ssl_port_srt | default(443, true) }};
    {% if webserver_dns is defined and webserver_dns != '' %}
    server_name         {{ webserver_dns }};
    {% endif %}
    ssl on;
    ssl_certificate     {{ nginx_ssl_dest_dir }}/{{ cert_dns }}.crt;
    ssl_certificate_key {{ nginx_ssl_dest_dir }}/{{ cert_dns }}.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
{% else %}
    listen {{ nginx_non_ssl_port_srt | default(80, true) }};
    {% if webserver_dns is defined and webserver_dns != '' %}
    server_name {{ webserver_dns }};
    {% endif %}
{% endif %}

    root {{ static_dir_srt }};

    error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 426 428 429 431 444 451 500 501 502 503 504 505 506 507 508 510 511 599 @gotohx;
    location @gotohx {
        return 301 {{ www2_proxy_to }};
    }

    {% block index_location %}
    location = / {
        index index.html;
    }
    {% endblock %}

    {% block robots_location %}
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    {% endblock %}

    #
    # Wide-open CORS config for nginx
    # from https://enable-cors.org/server_nginx.html
    #
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            #
            # Custom headers and headers various browsers *should* be OK with but aren't
            #
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            #
            # Tell client that this pre-flight info is valid for 20 days
            #
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        if ($request_method = 'POST') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
        if ($request_method = 'GET') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        }
    }
}
