---
#
# assumes common_play.yml already applied to all involved inventory
#

- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
      varnish_version: '6.1.1'
      is_varnish: '{{ hostvars[inventory_hostname].ec2_tag_service | regex_search("varnish") }}'
      varnish_default_vcl_template_path: 'roles/varnishlog/templates/default_dedicated.vcl.j2'
      varnish_be: "{% if hostvars[inventory_hostname].ec2_tag_service == 'idsvarnish' %}\
                        {{ varnish_instances.ids.backend }}\
                   {% elif hostvars[inventory_hostname].ec2_tag_service == 'hxvarnish' %}\
                            {{ varnish_instances.hx.backend }}\
                   {% endif %}"
      varnish_listen_port: "{% if hostvars[inventory_hostname].ec2_tag_service == 'idsvarnish' %}\
                        {{ varnish_instances.ids.frontend.port }}\
                   {% elif hostvars[inventory_hostname].ec2_tag_service == 'hxvarnish' %}\
                        {{ varnish_instances.hx.frontend.port }}\
                   {% endif %}"
  vars_files:
      - vars/common_vars.yml
      - vars/loris_vars.yml

  tasks:
      - name: install varnish
        include_role:
            name: external/geerlingguy.varnish
        when: is_varnish is defined and is_varnish == 'varnish'

      - name: enable varnishlog and varnishncsa
        include_role:
            name: varnishlog
        when: is_varnish is defined and is_varnish == 'varnish'


  # install log/metrics scripts, syslog to s3, put-metrics to cloudwatch
- import_playbook: cloudwatch_scripts_play.yml
  when: ec2_tag_cluster == 'prod'


- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
    project_name: '{{ hostvars[inventory_hostname].ec2_tag_project | mandatory}}'
    service_role: '{{ hostvars[inventory_hostname].ec2_tag_service | mandatory}}'
    cluster_env: '{{ (hostvars[inventory_hostname].ec2_tag_cluster == "prod")| ternary("prod", "devo") }}'
    cloudwatch_namespace: '{{ cloudwatch_namespace_prefix }}/{{ project_name }}'
    cronjob_scripts_dir: '/usr/local/bin'
  vars_files:
    - vars/common_vars.yml
    - vars/loris_vars.yml

  tasks:
    - import_tasks: roles/external/nmaekawa.cloudwatch/tasks/install_backup_cronjob.yml
      vars:
        cronjob_owner: root
        s3_backup_prefix: '{{ cluster_env }}/{{ project_name }}'
        file_backup_prefix: '{{ service_role }}_{{ ansible_ec2_instance_id }}'
        files_to_backup:
          - /var/log/varnish/varnishncsa.log.1
      when: "ec2_tag_cluster == 'prod' and is_varnish is defined and is_varnish == 'varnish'"


