---
#
# assumes common_play.yml already applied to all involved inventory
# assumes postgres hxat database and acct already created
# assumes postgres hxat in rds, so need to pg_dump from hxat
#
# required for prod when using rds:
# ALWAYS ADD -e project_name=<project_name> to ansible-playbook extra args
# e.g. -e project_name=hxat
#

- import_playbook: common_play.yml

- hosts: '{{ target_hosts | default("tag_service_hxat", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
    local_user:
      name: '{{ service_name }}'
      authorized: []
  vars_files:
    - vars/common_vars.yml
    - vars/hxat_vars.yml

  tasks:
    - include_role:
        name: external/nmaekawa.apt
      vars:
        apt_other_packages: "{{ apt_required_packages_hxat }}"

    - include_role:
        name: external/Stouts.users
      vars:
        users_users: '{{ [local_user] }}'

    - include_role:
        name: external/nmaekawa.extra-ebs
      when: use_aws

    - name: install redis
      include_role:
        name: external/geerlingguy.redis


- hosts: '{{ target_hosts | default("tag_service_hxat", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  vars_files:
    - vars/common_vars.yml
    - vars/hxat_vars.yml
  handlers:
    - include_tasks: handlers/main.yml

  tasks:
    - name: install webapp
      include_role:
        name: webapp_install
      vars:
        wsgi_module: 'annotationsx'  # when wsgi module doesn't share same name as service_name

    - name: run migration and collectstatic
      include_tasks: 'roles/webapp_install/tasks/django_manage.yml'

    - name: create django admin user
      include_tasks: 'roles/webapp_install/tasks/django_admin_user.yml'

    - name: config nginx
      include_role:
        name: nginx
      vars:
        nginx_template_path: roles/nginx/templates/nginx_hxat.j2

    - name: cronjob to clear sessions
      cron:
        name: 'clear django sessions'
        user: '{{ service_user }}'
        hour: '7'
        minute: '0'
        state: present
        job: >
          {{ service_name | upper }}_DOTENV_PATH={{ service_dotenv_path }} {{ service_venv_dir }}/bin/python3 {{ service_install_dir }}/manage.py clearsessions 2>&1 | logger -t '[clear django sessions]'


  # install log/metrics scripts, syslog to s3, put-metrics to cloudwatch
- import_playbook: cloudwatch_scripts_play.yml
  when: ec2_tag_cluster == 'prod'

- import_playbook: nginx_backup_play.yml
  when: ec2_tag_cluster == 'prod'

- import_playbook: route53_play.yml
  when: "ec2_tag_cluster not in ['prod', 'demo', 'vagrant']"




