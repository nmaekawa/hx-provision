---
- hosts: tag_ids
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  gather_facts: False
  vars_files:
      - vars/loris_vars.yml

  tasks:
      - name: install python2
        raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
        register: result
        changed_when: "result.stdout != ''"


- hosts: tag_ids
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/loris_vars.yml

  roles:
      - external/jmcvetta.passwordless_sudo
      - { role: external/nmaekawa.apt, apt_other_packages: "{{ apt_required_packages_loris }}" }
      - external/Stouts.users


- hosts: tag_ids
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/loris_vars.yml
  vars:
    loris_git_repo: 'https://github.com/loris-imageserver/loris.git'
    loris_git_version: 'v2.2.0'

  handlers:
    - include: handlers/main.yml

  tasks:
      - name: setup facts
        include_role:
            name: facts_setup

      - name: setup ids loris
        include_role:
            name: hx.loris
        vars:
            local_image_sample_path_tar_gz: '/Volumes/hx-images/ids_images_tif.tar.gz'

      - name: setup proxy
        include_role:
            name: nginx
        vars:
            enable_ssl: 'false'
            nginx_template_path: roles/nginx/templates/nginx_loris.j2


- hosts: tag_ids
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/loris_vars.yml

  tasks:
      - name: install varnish
        include_role:
            name: external/geerlingguy.varnish


      # have to repeat varnish install for varnishlog
      # first we create a proper systemd service file -- that requires
      # varnishlog user created in the previous varnish install...
      # i think it's related to this:
      # https://github.com/ansible/ansible/issues/22303
      - name: hack to setup varnishlog
        include_role:
            name: varnishlog

      - name: re-run role to enable varnishlog
        include_role:
            name: external/geerlingguy.varnish
        vars:
            varnish_enabled_services: [ varnishlog ]




