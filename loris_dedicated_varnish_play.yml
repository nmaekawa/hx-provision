---
- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  gather_facts: False
  vars_files:
      - vars/common_vars.yml
      - vars/loris_dedicated_varnish_vars.yml

  tasks:
      - debug:
          msg: "hx_image_host is ({{ hx_image_host }})"

      - name: install python2
        raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
        register: result
        changed_when: "result.stdout != ''"


- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
      local_user:
          name: '{{ service_name }}'
          authorized: []
  vars_files:
      - vars/common_vars.yml
      - vars/loris_dedicated_varnish_vars.yml

  roles:
      - external/jmcvetta.passwordless_sudo
      - { role: external/nmaekawa.apt }
      - { role: external/Stouts.users, users_users: '{{ users_developers + [local_user] }}' }


- hosts: '{{ target_hosts | default("tag_service_loris", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/common_vars.yml
      - vars/loris_dedicated_varnish_vars.yml
  vars:
    loris_git_repo: 'https://github.com/loris-imageserver/loris.git'
    loris_git_version: 'v2.2.0'

  handlers:
    - include: handlers/main.yml

  tasks:
      - include_role:
          name: external/nmaekawa.apt
        vars:
            apt_other_packages: '{{ apt_required_packages_loris }}'

      - name: setup loris
        include_role:
            name: hx.loris
        vars:
            local_image_sample_path_tar_gz: '/Volumes/Projects/Dev_Team/images/images_prod_20180824.tar.gz'


- hosts: '{{ target_hosts | default("all", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
      is_varnish: '{{ hostvars[inventory_hostname].ec2_tag_service | regex_search("varnish") }}'
      varnish_default_vcl_template_path: 'roles/varnishlog/templates/default_dedicated.vcl.j2'
      varnish_be: "{% if hostvars[inventory_hostname].ec2_tag_service == 'idsvarnish' %}\
                        {{ varnish_instances.ids.backend }}\
                   {% elif hostvars[inventory_hostname].ec2_tag_service == 'hxvarnish' %}\
                            {{ varnish_instances.hx.backend }}\
                   {% endif %}"
      varnish_listen_port: "{% if hostvars[inventory_hostname].ec2_tag_service == 'idsvarnish' %}\
                        {{ varnish_instances.ids.frontend.port }}\
                   {% elif hostvars[inventory_hostname].ec2_tag_service == 'hxvarnish' %}\
                        {{ varnish_instances.hx.frontend.port }}\
                   {% endif %}"
  vars_files:
      - vars/common_vars.yml
      - vars/loris_dedicated_varnish_vars.yml

  tasks:
      - name: install varnish
        include_role:
            name: external/geerlingguy.varnish
        when: is_varnish is defined and is_varnish == 'varnish'

      - name: enable varnishlog
        include_role:
            name: varnishlog
        when: is_varnish is defined and is_varnish == 'varnish'


- hosts: '{{ target_hosts | default("tag_service_reverseproxy", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/common_vars.yml
      - vars/loris_dedicated_varnish_vars.yml
  vars:
    loris_git_repo: 'https://github.com/loris-imageserver/loris.git'
    loris_git_version: 'v2.2.0'

  handlers:
    - include: handlers/main.yml

  tasks:
      - name: setup proxy
        include_role:
            name: nginx
        vars:
            static_dir: '{{ service_static_dir }}'
            nginx_template_path: roles/nginx/templates/nginx_reverse_proxy.j2


