---

- import_playbook: catchpy_dbserver_play.yml
- import_playbook: catchpy_postgres_acct_play.yml  # creates postgres acct and db for catchpy
- import_playbook: catchpy_webserver_play.yml

- import_playbook: cloudwatch_scripts_play.yml
  when: ec2_tag_cluster == 'prod'

  # play to set route53 dns for catchpy, if devo instance
- hosts: tag_service_catchpy
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: '{{ lookup("env", "USER") }}'
  vars:
      service_name: '{{ hostvars[inventory_hostname].ec2_tag_service | mandatory }}'
      cluster_name: '{{ hostvars[inventory_hostname].ec2_tag_cluster | mandatory }}'
  vars_files:
      - vars/common_vars.yml
      - vars/catchpy_vars.yml

  tasks:
      - name: add a A Record in route53 for {{ service_name }}
        route53:
            state: present
            zone: '{{ org_public_domain }}'
            record: '{{ cluster_name }}.{{ cert_dns }}.{{ org_public_domain }}'
            type: A
            ttl: 300
            value: '{{ hostvars[inventory_hostname].ec2_ip_address }}'
        delegate_to: localhost
        when: "ec2_tag_cluster not in ['prod', 'demo']"

