---
#
# assumes ec2 instance has the `ebs_device` volume already attached.
# assumes postgres catchpy database and acct already created
# assumes postgres catchpy in rds, so need to pg_dump from catchpy
#
# required for prod when using rds:
# run rds_dbdump_play.yml in order to have pgdumps backup on top of ami snapshots
#

- import_playbook: common_play.yml


- hosts: '{{ target_hosts | default("tag_service_catchpy", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
    local_user:
      name: '{{ service_name }}'
      authorized: []
  vars_files:
    - vars/common_vars.yml
    - vars/catchpy_vars.yml

  tasks:
    - include_role:
        name: external/nmaekawa.apt
      vars:
        apt_other_packages: "{{ apt_required_packages_catchpy }}"

    - include_role:
        name: external/Stouts.users
      vars:
        users_users: '{{ [local_user] }}'

    - include_role:
        name: external/nmaekawa.extra-ebs
      when: use_aws


- hosts: '{{ target_hosts | default("tag_service_catchpy", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  vars_files:
    - vars/common_vars.yml
    - vars/catchpy_vars.yml
  handlers:
    - include_tasks: handlers/main.yml

  tasks:
    - name: install webapp
      include_role:
        name: webapp_install

    - name: run migration and collectstatic
      include_tasks: 'roles/webapp_install/tasks/django_manage.yml'

    - name: create django admin user
      include_tasks: 'roles/webapp_install/tasks/django_admin_user.yml'

    - name: config nginx
      include_role:
        name: nginx


  # install log/metrics scripts, syslog to s3, put-metrics to cloudwatch
- import_playbook: cloudwatch_scripts_play.yml
  when: ec2_tag_cluster == 'prod'

- import_playbook: nginx_backup_play.yml
  when: ec2_tag_cluster == 'prod'

- import_playbook: route53_play.yml
  when: "ec2_tag_cluster not in ['prod', 'demo', 'vagrant']"


